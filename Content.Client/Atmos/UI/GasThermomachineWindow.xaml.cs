// SPDX-FileCopyrightText: 2022 mirrorcult <lunarautomaton6@gmail.com>
// SPDX-FileCopyrightText: 2023 Menshin <Menshin@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Nemanja <98561806+EmoGarbage404@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 sleepyyapril <123355664+sleepyyapril@users.noreply.github.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later AND MIT

using Content.Client.Power.Components;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client.Atmos.UI;

[GenerateTypedNameReferences]
public sealed partial class GasThermomachineWindow : FancyWindow
{
    [Dependency] private readonly IEntityManager _entManager = default!;

    public bool Active = true;

    public FloatSpinBox TemperatureSpinbox;

    public EntityUid Entity;

    public GasThermomachineWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        SpinboxHBox.AddChild(
            TemperatureSpinbox = new FloatSpinBox(.1f, 2) { MinWidth = 150, HorizontalExpand = true }
            );
    }

    public void SetActive(bool active)
    {
        Active = active;
        if (active)
        {
            ToggleStatusButton.Text = Loc.GetString("comp-gas-thermomachine-ui-status-enabled");
        }
        else
        {
            ToggleStatusButton.Text = Loc.GetString("comp-gas-thermomachine-ui-status-disabled");
        }
    }

    public void SetTemperature(float temperature)
    {
        TemperatureSpinbox.Value = temperature;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);

        if (_entManager.TryGetComponent(Entity, out ApcPowerReceiverComponent? receiver))
        {
            SetActive(!receiver.PowerDisabled);
        }
    }
}
