using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Content.Client.Message;
using Robust.Client.Console;

namespace Content.Client.UserInterface.Systems.Chat.Controls.Denu;

[GenerateTypedNameReferences]
public sealed partial class DenuWindow : AnimatedWindow
{
    private const string PreviewText = "\"Hello! *italic* **bold** ***bolditalic***\" *looks at you*";

    private readonly DenuUIController _denuUIController;
    private IClientConsoleHost _consoleHost;

    public DenuWindow()
    {
        RobustXamlLoader.Load(this);

        _denuUIController = UserInterfaceManager.GetUIController<DenuUIController>();
        _consoleHost = IoCManager.Resolve<IClientConsoleHost>();

        InitializeUI();
    }

    private void InitializeUI()
    {
        Title = "Denu";
        
        Tabs.SetTabTitle(0, "Chat");
        Tabs.SetTabTitle(1, "Help");

        HelpButton.Visible = true;
        HelpButton.Disabled = false;
        HelpButton.OnPressed += _ => Help();

        CloseButton.OnPressed += _ => Close();

        TypingToggleButton.WhileToggled += _denuUIController.ShowTypingIndicator;
        TypingToggleButton.OnToggledOff += _denuUIController.HideTypingIndicator;
        _consoleHost.AnyCommandExecuted += (_, _, _, _) => TypingToggleButton.Pressed = false;

        AutoFormatterCheckBox.OnToggled += e => _denuUIController.AutoFormatterEnabled = e.Pressed;
        RemoveAsterisksCheckBox.OnToggled += e => _denuUIController.RemoveAsterisks = e.Pressed;

        DialogueColorSelector.Color = _denuUIController.DialogueColor;
        DialogueColorSelector.OnColorChanged += color =>
        {
            _denuUIController.DialogueColor = color;
            UpdatePreview();
        };

        EmoteColorSelector.Color = _denuUIController.EmoteColor;
        EmoteColorSelector.OnColorChanged += color =>
        {
            _denuUIController.EmoteColor = color;
            UpdatePreview();
        };

        UpdatePreview();
    }

    void Help() { }

    private void UpdatePreview()
    {
        string dialogueColor = _denuUIController.DialogueColor.ToHex();
        string emoteColor = _denuUIController.EmoteColor.ToHex();
        string formattedText = MessageFormatter.Format(PreviewText, dialogueColor, emoteColor);
        TextPreview.SetMarkup(PreviewText + "\n" + formattedText);
    }
}
