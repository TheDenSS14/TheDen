// SPDX-FileCopyrightText: 2024 FoxxoTrystan <trystan.garnierhein@gmail.com>
// SPDX-FileCopyrightText: 2024 Skye <22365940+Skyedra@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 sleepyyapril <123355664+sleepyyapril@users.noreply.github.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later AND MIT

using System.Linq;
using Content.Client.Administration.Managers;
using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Content.Client.UserInterface.Systems.EscapeMenu;
using Content.Shared.Administration;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Console;
using Robust.Client.ResourceManagement;
using Robust.Shared.Utility;

namespace Content.Client.UserInterface.Systems.WhitelistWindow.Controls
{
    [GenerateTypedNameReferences]
    public sealed partial class WhitelistDenialWindow : FancyWindow
    {
        [Dependency] private readonly IResourceCache _resourceManager = default!;
        [Dependency] private readonly IUriOpener _uri = default!;

        public WhitelistDenialWindow()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);
            Stylesheet = IoCManager.Resolve<IStylesheetManager>().SheetSpace;

            WhitelistApplyButton.OnPressed += _ =>
            {
                _uri.OpenUri("https://discord.gg/ZZYNpq5KBJ"); // Floof discord link
            };
        }


        protected override void Opened()
        {
            base.Opened();
        }

        public void SetDenialMessage(string denial)
        {
            DenialReason.SetMessage(denial);
        }
    }
}
