// SPDX-FileCopyrightText: 2021 Leo
// SPDX-FileCopyrightText: 2021 Pieter-Jan Briers
// SPDX-FileCopyrightText: 2021 Visne
// SPDX-FileCopyrightText: 2022 Javier Guardia FernÃ¡ndez
// SPDX-FileCopyrightText: 2022 mirrorcult
// SPDX-FileCopyrightText: 2023 DrSmugleaf
// SPDX-FileCopyrightText: 2023 Morb
// SPDX-FileCopyrightText: 2025 Perry Fraser
// SPDX-FileCopyrightText: 2025 sleepyyapril
//
// SPDX-License-Identifier: MIT

using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;

namespace Content.Client.Administration.UI.Tabs
{
    [GenerateTypedNameReferences]
    public sealed partial class ServerTab : Control
    {
        [Dependency] private readonly IConfigurationManager _config = default!;
        [Dependency] private readonly IClientConsoleHost _console = default!;

        public ServerTab()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            _config.OnValueChanged(CCVars.OocEnabled, OocEnabledChanged, true);
            _config.OnValueChanged(CCVars.LoocEnabled, LoocEnabledChanged, true);

            ServerShutdownButton.OnPressed += _ => _console.ExecuteCommand("shutdown");
        }

        private void OocEnabledChanged(bool value)
        {
            SetOocButton.Pressed = value;
        }

        private void LoocEnabledChanged(bool value)
        {
            SetLoocButton.Pressed = value;
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);

            if (disposing)
            {
                _config.UnsubValueChanged(CCVars.OocEnabled, OocEnabledChanged);
                _config.UnsubValueChanged(CCVars.LoocEnabled, LoocEnabledChanged);
            }
        }
    }
}
