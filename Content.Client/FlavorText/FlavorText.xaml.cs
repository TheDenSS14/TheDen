// SPDX-FileCopyrightText: 2022 Veritius <veritiusgaming@gmail.com>
// SPDX-FileCopyrightText: 2023 Morb <14136326+Morb0@users.noreply.github.com>
// SPDX-FileCopyrightText: 2023 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 VMSolidus <evilexecutive@gmail.com>
// SPDX-FileCopyrightText: 2025 sleepyyapril <123355664+sleepyyapril@users.noreply.github.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later AND MIT

using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.FlavorText
{
    [GenerateTypedNameReferences]
    public sealed partial class FlavorText : Control
    {
        public Action<string>? OnSfwFlavorTextChanged;
        public Action<string>? OnNsfwFlavorTextChanged;
        public Action<string>? OnCharacterConsentChanged;

        public FlavorText()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            var loc = IoCManager.Resolve<ILocalizationManager>();
            CFlavorTextSFWInput.Placeholder = new Rope.Leaf(loc.GetString("flavor-text-placeholder"));
            CFlavorTextSFWInput.OnTextChanged  += _ => SfwFlavorTextChanged();

            CFlavorTextNSFWInput.Placeholder = new Rope.Leaf(loc.GetString("flavor-text-nsfw-placeholder"));
            CFlavorTextNSFWInput.OnTextChanged  += _ => NsfwFlavorTextChanged();

            CFlavorTextConsentInput.Placeholder = new Rope.Leaf(loc.GetString("character-consent-placeholder"));
            CFlavorTextConsentInput.OnTextChanged  += _ => CharacterConsentTextChanged();

            TabSFW.Orphan();
            TabNSFW.Orphan();
            TabCharacterConsent.Orphan();

            FlavorTextTabs.AddTab(TabSFW, loc.GetString("flavor-text-title"));
            FlavorTextTabs.AddTab(TabNSFW, loc.GetString("flavor-text-nsfw-title"));
            FlavorTextTabs.AddTab(TabCharacterConsent, loc.GetString("character-consent-title"));
        }

        private void SfwFlavorTextChanged() =>
            OnSfwFlavorTextChanged?.Invoke(Rope.Collapse(CFlavorTextSFWInput.TextRope).Trim());

        private void NsfwFlavorTextChanged() =>
            OnNsfwFlavorTextChanged?.Invoke(Rope.Collapse(CFlavorTextNSFWInput.TextRope).Trim());

        private void CharacterConsentTextChanged() =>
            OnCharacterConsentChanged?.Invoke(Rope.Collapse(CFlavorTextConsentInput.TextRope).Trim());
    }
}
