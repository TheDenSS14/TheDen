
using System.Linq;
using Content.Client.Lobby.UI;
using Content.Client.UserInterface.Controls;
using Content.Shared._DEN.Job;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;


namespace Content.Client._DEN.Lobby.UI.Controls;

/// <summary>
///     A selection of job titles for this job.
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class AlternateTitleSelectionMenu : FancyWindow
{
    public event Action<string?>? OnSelectedAlternateTitleChanged;

    public AlternateTitleSelectionMenu(JobPrototype job,
        AlternateJobTitlePrototype titlesPrototype,
        ISawmill sawmill,
        string? selectedAlternateTitle = null)
    {
        RobustXamlLoader.Load(this);

        var buttons = new List<LocId> { job.ID, };
        buttons.AddRange(titlesPrototype.Titles);
        sawmill.Info("Found " + buttons.Count + " titles.");

        var selector = new RadioOptions<string>(RadioOptionsLayout.Vertical);

        foreach (var titleId in buttons)
        {
            sawmill.Info(titleId);
            var title = GetButtonText(job, titleId);

            selector.AddItem(title, titleId, _ => OnSelectedAlternateTitleChanged?.Invoke(titleId));
            if (selectedAlternateTitle != null && titleId == selectedAlternateTitle)
            {
                sawmill.Info($"Selected alternate title is: {selectedAlternateTitle}");
                selector.SelectByValue(titleId);
            }
        }

        TitlesContainer.AddChild(selector);
        Titles.InvalidateMeasure();
    }

    private string GetButtonText(JobPrototype job, string titleId) =>
        titleId == job.ID ? job.LocalizedName : Loc.GetString(titleId);

}
