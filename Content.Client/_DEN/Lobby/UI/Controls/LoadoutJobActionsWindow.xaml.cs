// SPDX-FileCopyrightText: 2025 DoctorJado
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using Content.Client.Lobby.UI;
using Content.Client.UserInterface.Controls;
using Content.Shared.Clothing.Loadouts.Prototypes;
using Content.Shared.Clothing.Loadouts.Systems;
using Content.Shared.Preferences;
using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.RichText;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;


namespace Content.Client._DEN.Lobby.UI.Controls;

[GenerateTypedNameReferences]
public sealed partial class LoadoutJobActionsWindow : FancyWindow
{
    public event Action<JobPrototype>? OnCopyTraitsActionPressed;

    public event Action<JobPrototype>? OnCopyLoadoutsActionPressed;

    public HumanoidCharacterProfile? Profile;

    public HumanoidProfileEditor _profileEditor;

    private readonly JobPrototype _jobPrototype;

    private readonly IPrototypeManager _prototypeManager;

    public LoadoutJobActionsWindow(
        JobPrototype job,
        HumanoidProfileEditor profileEditor,
        IPrototypeManager prototypeManager)
    {
        RobustXamlLoader.Load(this);
        _jobPrototype = job;
        _profileEditor = profileEditor;
        _prototypeManager = prototypeManager;

        Init();

        CopyTraitsAction.OnPressed += _ => OnCopyTraits();
        CopyLoadoutAction.OnPressed += _ => OnCopyLoadout();
        CopyBothAction.OnPressed += _ => OnCopyBoth();
        DeleteSavedLoadoutAction.OnPressed += _ => OnDeleteSavedLoadout();
        CopyTraitsAllAction.OnPressed += _ => OnCopyTraitsAll();
        CopyLoadoutsAllAction.OnPressed += _ => OnCopyLoadoutAll();
        CopyBothAllAction.OnPressed += _ => OnCopyBothAll();
    }

    private void Init()
    {
        EditingLabel.Text = _jobPrototype.LocalizedName;
        LoadoutLabelContainer.Visible = true;
        EditingLabelContainer.Visible = true;

        Update();
    }

    public void Update()
    {
        if (_profileEditor == null)
            return;

        var jobediting = _profileEditor.Profile?.GetHighestPriorityJob() ?? String.Empty;
        if (_prototypeManager.TryIndex<JobPrototype>(jobediting, out var jobPrototype))
            LoadoutLabel.Text = Loc.GetString(jobPrototype.LocalizedName);
        else
            LoadoutLabel.Text = "Invalid job: this is a bug :(";

        DeleteSavedLoadoutAction.Disabled = true;
        if ((_profileEditor.Profile?.JobTraits.TryGetValue(_jobPrototype.ID, out _) ?? false)
            || (_profileEditor.Profile?.JobLoadouts.TryGetValue(_jobPrototype.ID, out _) ?? false))
            DeleteSavedLoadoutAction.Disabled = false;

        /// idk how to do this better, please tell me :(
        var tooltip = Loc.GetString("loadout-job-action-tooltip-generic", ("currentJob", LoadoutLabel.Text), ("targetJob", _jobPrototype.LocalizedName));;

        CopyTraitsAction.ToolTip = tooltip;
        CopyLoadoutAction.ToolTip = tooltip;
        CopyBothAction.ToolTip = tooltip;
        DeleteSavedLoadoutAction.ToolTip = Loc.GetString("loadout-job-action-tooltip-delete", ("targetJob", _jobPrototype.LocalizedName));

        CopyTraitsAllAction.Disabled = true;
        CopyLoadoutsAllAction.Disabled = true;
        CopyBothAllAction.Disabled = true;
        CopyTraitsAllAction.ToolTip = "";
        CopyLoadoutsAllAction.ToolTip = "";
        CopyBothAllAction.ToolTip = "";

        if (_profileEditor.Profile?.GetHighestPriorityJob() == _jobPrototype.ID)
        {
            CopyTraitsAllAction.Disabled = false;
            CopyLoadoutsAllAction.Disabled = false;
            CopyBothAllAction.Disabled = false;
        }
        else
        {
            CopyTraitsAllAction.ToolTip = Loc.GetString("loadout-job-action-tooltip-to-all-error");
            CopyLoadoutsAllAction.ToolTip = Loc.GetString("loadout-job-action-tooltip-to-all-error");
            CopyBothAllAction.ToolTip = Loc.GetString("loadout-job-action-tooltip-to-all-error");
        }
    }

    private void OnCopyTraits()
    {
        _profileEditor?.CopyTraitsFrom(_jobPrototype);
        Update();
    }

    private void OnCopyLoadout()
    {
        _profileEditor?.CopyLoadoutFrom(_jobPrototype);
        Update();
    }

    private void OnCopyBoth()
    {
        OnCopyTraits();
        OnCopyLoadout();
    }

    private void OnDeleteSavedLoadout()
    {
        _profileEditor?.RemoveLoadoutFrom(_jobPrototype);
        Update();
    }

    private void OnCopyTraitsAll()
    {
        _profileEditor?.CopyTraitsAllFrom();
    }

    private void OnCopyLoadoutAll()
    {
        _profileEditor?.CopyLoadoutsAllFrom();
    }

    private void OnCopyBothAll()
    {
        OnCopyTraitsAll();
        OnCopyLoadoutAll();
    }
}
