# SPDX-FileCopyrightText: 2021 Elijahrane <60792108+Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 2021 Mith-randalf <84274729+Mith-randalf@users.noreply.github.com>
# SPDX-FileCopyrightText: 2021 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 2021 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 Kara <lunarautomaton6@gmail.com>
# SPDX-FileCopyrightText: 2022 Lamrr <96937466+Lamrr@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 Leon Friedrich <60421075+ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 Moony <moonheart08@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 Peptide90 <78795277+Peptide90@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 Rane <60792108+Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 2022 theashtronaut <112137107+theashtronaut@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Chief-Engineer <119664036+Chief-Engineer@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Emisse <99158783+Emisse@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Fluffiest Floofers <thebluewulf@gmail.com>
# SPDX-FileCopyrightText: 2023 Ilya246 <57039557+Ilya246@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Jeff <velcroboy333@hotmail.com>
# SPDX-FileCopyrightText: 2023 MagnusCrowe <whiterider1988@yahoo.com>
# SPDX-FileCopyrightText: 2023 Maxtone <124747282+MagnusCrowe@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Nim <128169402+Nimfar11@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Puro <103608145+PuroSlavKing@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Tad "Taddy" Johnson <120885811+TadJohnson00@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 TemporalOroboros <TemporalOroboros@gmail.com>
# SPDX-FileCopyrightText: 2023 Tunguso4ka <71643624+Tunguso4ka@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 Velcroboy <107660393+ChilbroBaggins@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 deltanedas <39013340+deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 rosieposie <52761126+rosieposieeee@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 Fansana <116083121+Fansana@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 Fansana <fansana95@googlemail.com>
# SPDX-FileCopyrightText: 2024 FoxxoTrystan <45297731+FoxxoTrystan@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 Ichaie <167008606+Ichaie@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 SimpleStation14 <130339894+SimpleStation14@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 Skubman <ba.fallaria@gmail.com>
# SPDX-FileCopyrightText: 2024 VMSolidus <evilexecutive@gmail.com>
# SPDX-FileCopyrightText: 2024 Vasilis <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 2025 Blitz <73762869+BlitzTheSquishy@users.noreply.github.com>
# SPDX-FileCopyrightText: 2025 sleepyyapril <123355664+sleepyyapril@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later AND MIT

- type: entity
  id: LockerBooze
  parent: LockerBase
  name: booze storage
  description: This is where the bartender keeps the booze.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cabinet
    stateDoorOpen: cabinet_open
    stateDoorClosed: cabinet_door

  - type: AccessReader
    access: [["Bar"]]
  - type: EntityStorage
    closeSound:
      path: /Audio/Effects/woodenclosetclose.ogg
    openSound:
      path: /Audio/Effects/woodenclosetopen.ogg

# Bartender
- type: entity
  id: LockerBartender
  parent: LockerBase
  name: bartender's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: bartender
    stateDoorOpen: bartender_open
    stateDoorClosed: bartender_door
  - type: AccessReader
    access: [ [ "Bar" ] ]

# Basic
- type: entity
  id: LockerSteel
  parent: LockerBaseSecure
  name: secure closet
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: secure
    stateDoorOpen: secure_open
    stateDoorClosed: secure_door
  - type: DamageOtherOnHit
    damage:
      types:
        Blunt: 15
    staminaCost: 50

# Cargo
- type: entity
  id: LockerQuarterMaster
  parent: LockerBaseSecure
  name: logistics officer's locker # DeltaV - Logistics Department replacing Cargo
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: qm
    stateDoorOpen: qm_open
    stateDoorClosed: qm_door
  - type: AccessReader
    access: [["Quartermaster"]]

- type: entity
  id: LockerSalvageSpecialist
  parent: LockerBase
  name: salvage specialist's equipment
  description: Nevermind the pickaxe.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: mining
    stateDoorOpen: mining_open
    stateDoorClosed: mining_door
  - type: AccessReader
    access: [["Salvage"]]

# Command
- type: entity
  id: LockerCaptain
  parent: LockerBaseSecure
  name: captain's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cap
    stateDoorOpen: cap_open
    stateDoorClosed: cap_door
  - type: AccessReader
    access: [["Captain"]]

- type: entity
  id: LockerHeadOfPersonnel
  parent: LockerBaseSecure
  name: head of personnel's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hop
    stateDoorOpen: hop_open
    stateDoorClosed: hop_door
  - type: AccessReader
    access: [["HeadOfPersonnel"]]

# CE
- type: entity
  id: LockerChiefEngineer
  parent: LockerBaseSecure
  name: chief engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: ce
    stateDoorOpen: ce_open
    stateDoorClosed: ce_door
  - type: AccessReader
    access: [ [ "ChiefEngineer" ] ]

# Electrical supplies
- type: entity
  id: LockerElectricalSupplies
  parent: LockerBase
  name: electrical supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng
    stateDoorOpen: eng_open
    stateDoorClosed: eng_elec_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Welding supplies
- type: entity
  id: LockerWeldingSupplies
  parent: LockerBase
  name: welding supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng
    stateDoorOpen: eng_open
    stateDoorClosed: eng_weld_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Atmos tech
- type: entity
  id: LockerAtmospherics
  parent: LockerBase
  name: atmospheric technician's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: atmos
    stateDoorOpen: atmos_open
    stateDoorClosed: atmos_door
  - type: AccessReader
    access: [ [ "Atmospherics" ] ]

# Engineer
- type: entity
  id: LockerEngineer
  parent: LockerBase
  name: engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng_secure
    stateDoorOpen: eng_secure_open
    stateDoorClosed: eng_secure_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Freezer
- type: entity
  id: LockerFreezerBase
  parent: LockerBase
  name: freezer
  suffix: No Access
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: freezer
    stateDoorOpen: freezer_open
    stateDoorClosed: freezer_door
  - type: ExplosionResistance
    damageCoefficient: 0.50
  - type: AntiRottingContainer

- type: entity
  id: LockerFreezer
  parent: LockerFreezerBase
  name: freezer
  suffix: Kitchen, Locked
  components:
  - type: AccessReader
    access: [ [ "Kitchen" ] ]

# Botanist
- type: entity
  id: LockerBotanist
  parent: LockerBase
  name: botanist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hydro
    stateDoorOpen: hydro_open
    stateDoorClosed: hydro_door
  - type: AccessReader
    access: [ [ "Hydroponics" ] ]

# Janitor
- type: entity
  id: LockerJanitor
  parent: LockerBase
  name: janitor locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: jan
    stateDoorOpen: jan_open
    stateDoorClosed: jan_door
  - type: AccessReader
    access: [ [ "Janitor" ] ]

# Medicine
- type: entity
  id: LockerMedicine
  parent: LockerBase
  name: medicine locker
  description: Filled to the brim with medical junk.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: med
    stateDoorOpen: med_open
    stateDoorClosed: med_door
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Medical doctor
- type: entity
  id: LockerMedical
  parent: LockerBase
  name: medical doctor's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: med_secure
    stateDoorOpen: med_secure_open
    stateDoorClosed: med_secure_door
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Paramedic
- type: entity
  id: LockerParamedic
  parent: LockerBase
  name: paramedic's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: paramed
    stateDoorOpen: paramed_open
    stateDoorClosed: paramed_door
  - type: AccessReader
    access: [ [ "Paramedic" ] ] # DeltaV - Change Medical access to Paramedic


# Chemical
- type: entity
  id: LockerChemistry
  parent: LockerBase
  name: chemical locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: med
    stateDoorOpen: med_open
    stateDoorClosed: chemical_door
  - type: AccessReader
    access: [ [ "Chemistry" ] ]

# CMO
- type: entity
  id: LockerChiefMedicalOfficer
  parent: LockerBaseSecure
  name: chief medical officer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cmo
    stateDoorOpen: cmo_open
    stateDoorClosed: cmo_door
  - type: AccessReader
    access: [ [ "ChiefMedicalOfficer" ] ]

# Science
- type: entity
  id: LockerResearchDirector
  parent: LockerBase
  name: mystagogue's locker # DeltaV - Epistemics Department replacing Science
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: rd
    stateDoorOpen: rd_open
    stateDoorClosed: rd_door
  - type: AccessReader
    access: [ [ "ResearchDirector" ] ]

- type: entity
  id: LockerScientist
  parent: LockerBase
  name: scientist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: science
    stateDoorOpen: science_open
    stateDoorClosed: science_door
  - type: AccessReader
    access: [ [ "Research" ] ]

# HoS
- type: entity
  id: LockerHeadOfSecurity
  parent: LockerBaseSecure
  name: head of security's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hos
    stateDoorOpen: hos_open
    stateDoorClosed: hos_door
  - type: AccessReader
    access: [["HeadOfSecurity"]]

# Warden
- type: entity
  id: LockerWarden
  parent: LockerBaseSecure
  name: warden's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: warden
    stateDoorOpen: warden_open
    stateDoorClosed: warden_door
  - type: AccessReader
    access: [["Armory"]]

# Brigmedic
- type: entity
  id: LockerBrigmedic
  parent: LockerBaseSecure
  name: corpsman locker # DeltaV - rename brigmedic to corpsman
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: brigmedic
    stateDoorOpen: armory_open
    stateDoorClosed: brigmedic_door
  - type: AccessReader
    access: [["Corpsman"]] # DeltaV - add corpsman access

# Security Officer
- type: entity
  id: LockerSecurity
  parent: LockerBaseSecure
  name: security officer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: sec
    stateDoorOpen: sec_open
    stateDoorClosed: sec_door
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: GunSafe
  parent: LockerBaseSecure
  name: gun safe
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: shotguncase
    stateDoorOpen: shotguncase_open
    stateDoorClosed: shotguncase_door
  - type: AccessReader
    access: [["Armory"]]

# Detective
- type: entity
  id: LockerDetective
  parent: LockerBooze
  name: detective's cabinet
  description: Usually cold and empty... like your heart.
  components:
  - type: AccessReader
    access: [["Detective"]]

- type: entity
  id: LockerEvidence
  parent: LockerSecurity
  name: evidence locker
  description: To store bags of bullet casings and detainee belongings.
  components:
  - type: AccessReader
    access: [["Security"]]

# Syndicate
- type: entity
  id: LockerSyndicatePersonal
  name: armory closet
  parent: LockerBaseSecure
  description: It's a personal storage unit for operative gear.
  suffix: Lockable # TheDen
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: syndicate
    stateDoorOpen: syndicate_open
    stateDoorClosed: syndicate_door

- type: entity
  id: LockerSyndicateAgentLocker
  name: syndicate agent locker
  parent: LockerBase
  description: It's a personal storage unit for agent gear.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: syndicate1
    stateDoorOpen: syndicate1_open
    stateDoorClosed: syndicate1_door
  - type: AccessReader
    access: [ [ "SyndicateAgent" ] ]

# Bluespace
- type: entity
  id: LockerBluespaceStation
  name: bluespace locker
  suffix: once to station
  parent: LockerSyndicatePersonal
  description: Advanced locker technology.
  components:
    - type: BluespaceLocker
      minBluespaceLinks: 1
      behaviorProperties:
        delay: 1
        actOnOpen: false
        bluespaceEffectOnInit: true
        bluespaceEffectOnTeleportSource: true
        bluespaceEffectOnTeleportTarget: true
        destroyAfterUses: 1
        destroyAfterUsesMinItemsToCountUse: 1
        destroyType: Delete
      autoLinksUseProperties: true
      autoLinkProperties:
        actOnOpen: false
        actOnClose: false
        destroyAfterUses: 2
        destroyType: DeleteComponent

# Clown
- type: entity
  id: LockerClown
  name: clown locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Clown"]] # Floof
  - type: EntityStorageVisuals
    stateBaseClosed: clown
    stateDoorOpen: clown_open
    stateDoorClosed: clown_door

# Mime
- type: entity
  id: LockerMime
  name: mime locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Mime"]] # Floof
  - type: EntityStorageVisuals
    stateBaseClosed: mime
    stateDoorOpen: mime_open
    stateDoorClosed: mime_door

# Representative
- type: entity
  id: LockerRepresentative
  name: representative locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Command"]]
  - type: EntityStorageVisuals
    stateBaseClosed: hop
    stateDoorOpen: hop_open
    stateDoorClosed: representative_door
